# Password Generator
print("Welcome to the PyPassword Generator!")
# Importing the necessary libraries
import random

# List of letters, numbers, and symbols
letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

# Request how many letters the user wants in their password
num_letters = int(input("How many letters would you like in your password?\n"))

# Request how many symbols the user wants in their password
num_symbols = int(input(f"How many symbols would you like?\n"))

# Request how many numbers the user wants in their password
num_numbers = int(input(f"How many numbers would you like?\n"))

# Generating random letters, symbols, and numbers based on user input
random_letters = [random.choice(letters) for letter in range(num_letters)]
random_symbols = [random.choice(symbols) for symbol in range(num_symbols)]
random_numbers = [random.choice(numbers) for number in range(num_numbers)]

# Combining the characters
password_list = random_letters + random_symbols + random_numbers

# Shuffling the combined list to ensure randomness
random.shuffle(password_list)

# Converting the list back into a string
password = ''.join(password_list)

print(f"Your password is: {password}")


##### This code was generated by Gemini. Initial creation failed as it didn't cast the password string to a password list but corrected with instruction. 
##### Investigate which is better.
# # Combine all character sets for efficient selection
# all_chars = letters + numbers + symbols

# # Securely generate password characters ensuring randomness
# password = ""
# for _ in range(num_letters):
#     password += random.SystemRandom().choice(letters)
# for _ in range(num_symbols):
#     password += random.SystemRandom().choice(symbols)
# for _ in range(num_numbers):
#     password += random.SystemRandom().choice(numbers)

# # Convert password string to a list, shuffle the list, and join back into a string
# password_list = list(password)
# random.SystemRandom().shuffle(password_list)
# password = ''.join(password_list)

# # Print the generated password
# print(f"Here is your password: {password}")